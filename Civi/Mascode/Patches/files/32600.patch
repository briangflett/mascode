From caccce19f7428a71d9df86d8f746a4730c8f08f6 Mon Sep 17 00:00:00 2001
From: Jaap Jansma <jaap.jansma@civicoop.org>
Date: Fri, 11 Apr 2025 17:48:49 +0200
Subject: [PATCH] dev/core#5838 formbuilder autofil case

---
 .../Civi/Afform/Behavior/CaseAutofill.php     | 66 +++++++++++++++++++
 ext/civi_case/civi_case.php                   |  6 ++
 ext/civi_case/info.xml                        |  1 -
 3 files changed, 72 insertions(+), 1 deletion(-)
 create mode 100644 ext/civi_case/Civi/Afform/Behavior/CaseAutofill.php

diff --git a/ext/civi_case/Civi/Afform/Behavior/CaseAutofill.php b/ext/civi_case/Civi/Afform/Behavior/CaseAutofill.php
new file mode 100644
index 000000000000..4a3d3cb30942
--- /dev/null
+++ b/ext/civi_case/Civi/Afform/Behavior/CaseAutofill.php
@@ -0,0 +1,66 @@
+<?php
+namespace Civi\Afform\Behavior;
+
+use Civi\Afform\AbstractBehavior;
+use Civi\Afform\Event\AfformPrefillEvent;
+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+use CRM_Case_ExtensionUtil as E;
+
+/**
+ * @service
+ * @internal
+ */
+class CaseAutofill extends AbstractBehavior implements EventSubscriberInterface {
+
+  /**
+   * @return array
+   */
+  public static function getSubscribedEvents() {
+    return [
+      'civi.afform.prefill' => ['onAfformPrefill', 99],
+    ];
+  }
+
+  public static function getEntities():array {
+    return ['Case'];
+  }
+
+  public static function getTitle():string {
+    return E::ts('Autofill');
+  }
+
+  public static function getDescription():string {
+    return E::ts('Automatically identify this case based on the case being viewed when this form is placed on the case summary screen or when email with the link to the form is send from the Case.');
+  }
+
+  public static function getModes(string $type):array {
+    $modes = [];
+    if ($type == 'Case') {
+      $modes[] = [
+        'name' => 'entity_id',
+        'label' => E::ts('Case being Viewed'),
+        'description' => E::ts('For use on the case summary page'),
+        'icon' => 'fa-folder-open',
+      ];
+    }
+    return $modes;
+  }
+
+  public static function onAfformPrefill(AfformPrefillEvent $event): void {
+    /* @var \Civi\Api4\Action\Afform\Prefill $apiRequest */
+    $apiRequest = $event->getApiRequest();
+    if ($event->getEntityType() == 'Case') {
+      $entity = $event->getEntity();
+      $id = $event->getEntityId();
+      $autoFillMode = $entity['case-autofill'] ?? '';
+      // Autofill with current entity (e.g. on the case summary screen)
+      if (!$id && $autoFillMode === 'entity_id' && $apiRequest->getFillMode() === 'form') {
+        $id = $apiRequest->getArgs()['case_id'] ?? NULL;
+        if ($id) {
+          $apiRequest->loadEntity($entity, [['id' => $id]]);
+        }
+      }
+    }
+  }
+
+}
diff --git a/ext/civi_case/civi_case.php b/ext/civi_case/civi_case.php
index eefd1395db76..0967735e1d99 100644
--- a/ext/civi_case/civi_case.php
+++ b/ext/civi_case/civi_case.php
@@ -3,6 +3,12 @@
 require_once 'civi_case.civix.php';
 use CRM_Case_ExtensionUtil as E;
 
+function civi_case_civicrm_scanClasses(array &$classes) {
+  $extMap = CRM_Extension_System::singleton()->getMapper();
+  $excludeRegex = $extMap->isActiveModule('afform') ? NULL : '/Afform/';
+  \Civi\Core\ClassScanner::scanFolders($classes, __DIR__ . '/', 'Civi', '\\', $excludeRegex);
+}
+
 /**
  * Implements hook_civicrm_managed().
  */
diff --git a/ext/civi_case/info.xml b/ext/civi_case/info.xml
index 565f80464fc8..58e142b37825 100644
--- a/ext/civi_case/info.xml
+++ b/ext/civi_case/info.xml
@@ -29,7 +29,6 @@
   </classloader>
   <mixins>
     <mixin>ang-php@1.0.0</mixin>
-    <mixin>scan-classes@1.0.0</mixin>
   </mixins>
   <civix>
     <namespace>CRM/Case</namespace>
