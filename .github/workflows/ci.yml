name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        
    name: PHP ${{ matrix.php-version }} Tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run code style checks
      run: composer run lint

    - name: Run static analysis
      run: composer run analyze

    - name: Run unit tests
      run: composer run test:unit

    - name: Run integration tests (if available)
      run: composer run test:integration
      continue-on-error: true

    - name: Generate test coverage
      run: composer run test:coverage
      if: matrix.php-version == '8.3'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.php-version == '8.3'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Run security audit
      run: composer audit
      continue-on-error: true

  quality-gate:
    runs-on: ubuntu-latest
    needs: [test, security]
    name: Quality Gate
    
    steps:
    - name: Quality gate passed
      run: echo "All quality checks passed!"